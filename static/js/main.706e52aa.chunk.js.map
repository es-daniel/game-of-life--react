{"version":3,"sources":["components/Button/Button.jsx","api/api.js","api/game_of_life.jsx","App.jsx","index.jsx"],"names":["Button","type","children","onClick","value","className","cx","url","response","axios","get","e","console","log","pattern","api","App","useState","running","setRunning","setPattern","grid","setGrid","useEffect","fetchInitGrid","a","game","newGrid","data","length","fetchNextGrid","updatedGrid","timer","setTimeout","clearTimeout","startGame","target","isGamePaused","isGridEmpty","map","row","i","cell","y","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAgBeA,EAZA,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACzC,OACE,wBACIA,MAAOA,EACPD,QAASA,EACTE,UAAWC,IAAG,kBAAD,OAAmBL,IAHpC,SAKGC,K,iBCCQ,EAVH,SAACK,GACX,IAAIC,EACJ,IACEA,EAAWC,IAAMC,IAAN,UAJE,yCAIF,OAAwBH,IACnC,MAAOI,GACPC,QAAQC,IAAIF,GAEd,OAAOH,GCHM,EAJG,eAACM,EAAD,uDAAW,OAAX,OAAsBC,EAAA,wBAAyBD,KAIlD,EAFI,kBAAMC,EAAQ,WCyGlBC,MAvGf,WACE,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,QAAvC,mBAAOH,EAAP,KAAgBM,EAAhB,KAEA,EAAwBH,mBAAS,IAAjC,mBAAOI,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACR,IAAMC,EAAa,uCAAG,8BAAAC,EAAA,sEACYC,EAAeZ,GAD3B,gBACNa,EADM,EACZC,KACRN,EAAQK,GAFY,2CAAH,qDAIfT,IAAYG,EAAKQ,QACnBL,MAED,CAACN,EAASJ,IAEbS,qBAAU,WACR,IAAMO,EAAa,uCAAG,8BAAAL,EAAA,sEACgBC,IADhB,gBACNK,EADM,EACZH,KAERN,EAAQS,GAHY,2CAAH,qDAKbC,EAAQC,YAAW,WACnBf,GAAWG,EAAKQ,QAClBC,MAED,KACH,OAAO,kBAAMI,aAAaF,MACzB,CAACd,EAASG,IAEb,IAAMc,EAAY,SAAC,GAA2B,IAAf/B,EAAc,EAAxBgC,OAAUhC,MAC7Be,GAAW,GACXC,EAAWhB,IAKPiC,EAAe,kBAAOnB,GAAWG,EAAKQ,QAOtCS,EAAc,kBAAOjB,EAAKQ,QAUhC,OACE,sBAAKxB,UAAU,OAAf,UACE,yBAASA,UAAU,aAAnB,SACGgB,EAAKkB,KAAI,SAACC,EAAKC,GACd,OACE,qBAAapC,UAAU,kBAAvB,SACGmC,EAAID,KAAI,SAACG,EAAMC,GAAP,OACP,qBAEEtC,UAAWC,IAAG,wBAAyB,CACrC,+BAAgCoC,EAChC,+BAAgCA,KAH7BC,OAHDF,QAchB,0BAASpC,UAAU,gBAAnB,UACE,cAAC,EAAD,CAAQD,MAAM,OAAOD,QA5BA,SAACQ,GACtB2B,KAAiBD,IACnBF,EAAUxB,GAbUQ,GAAW,IAuCqBlB,KAAK,UAAvD,SACGqC,IACG,eACAD,IACA,WACA,UAELC,KACC,qCACE,cAAC,EAAD,CACElC,MAAM,oBACND,QAASgC,EACTlC,KAAK,UAHP,+BAOA,cAAC,EAAD,CAAQG,MAAM,SAASD,QAASgC,EAAWlC,KAAK,UAAhD,uBAKJ,cAAC,EAAD,CAAQE,QAxDG,WACfgB,GAAW,GACXG,EAAQ,KAsDuBrB,KAAK,YAAhC,yBChGR2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.706e52aa.chunk.js","sourcesContent":["import React from \"react\";\nimport cx from \"classname\";\nimport \"./Button.scss\";\n\nconst Button = ({ type, children, onClick, value }) => {\n  return (\n    <button \n        value={value}\n        onClick={onClick} \n        className={cx(`button button--${type}`)}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import axios from \"axios\";\nconst MAIN_URL = \"https://gameoflife-api.herokuapp.com/\";\nconst get = (url) => {\n  let response;\n  try {\n    response = axios.get(`${MAIN_URL}${url}`);\n  } catch (e) {\n    console.log(e);\n  }\n  return response;\n};\n\nexport default {get};\n","import api from \"./api\";\n\nconst startGame = (pattern = \"rand\") => api.get(`start?pattern=${pattern}`);\n\nconst updateGame = () => api.get(\"update\");\n\nexport default { startGame, updateGame };\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport Button from \"./components/Button/Button\";\nimport game from \"./api/game_of_life\";\nimport cx from \"classname\";\n\nfunction App() {\n  const [running, setRunning] = useState(false);\n  const [pattern, setPattern] = useState(\"rand\");\n\n  const [grid, setGrid] = useState([]);\n\n  useEffect(() => {\n    const fetchInitGrid = async () => {\n      const { data: newGrid } = await game.startGame(pattern);\n      setGrid(newGrid);\n    };\n    if (running && !grid.length) {\n      fetchInitGrid();\n    }\n  }, [running, pattern]);\n\n  useEffect(() => {\n    const fetchNextGrid = async () => {\n      const { data: updatedGrid } = await game.updateGame();\n\n      setGrid(updatedGrid);\n    };\n    const timer = setTimeout(() => {\n      if (running && grid.length) {\n        fetchNextGrid();\n      }\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [running, grid]);\n\n  const startGame = ({ target: { value } }) => {\n    setRunning(true);\n    setPattern(value);\n  };\n\n  const pauseGame = () => setRunning(false);\n\n  const isGamePaused = () => !running && grid.length;\n\n  const stopGame = () => {\n    setRunning(false);\n    setGrid([]);\n  };\n\n  const isGridEmpty = () => !grid.length;\n\n  const handleActionButton = (e) => {\n    if (isGridEmpty() || isGamePaused()) {\n      startGame(e);\n    } else {\n      pauseGame();\n    }\n  };\n\n  return (\n    <div className=\"game\">\n      <section className=\"game__grid\">\n        {grid.map((row, i) => {\n          return (\n            <div key={i} className=\"game__grid__row\">\n              {row.map((cell, y) => (\n                <div\n                  key={y}\n                  className={cx(\"game__grid__row__cell\", {\n                    \"game__grid__row__cell--dead\": !cell,\n                    \"game__grid__row__cell--alive\": cell,\n                  })}\n                ></div>\n              ))}\n            </div>\n          );\n        })}\n      </section>\n      <section className=\"game__buttons\">\n        <Button value=\"rand\" onClick={handleActionButton} type=\"primary\">\n          {isGridEmpty()\n            ? \"Start Random\"\n            : isGamePaused()\n            ? \"Continue\"\n            : \"Pause\"}\n        </Button>\n        {isGridEmpty() && (\n          <>\n            <Button\n              value=\"gosper_glider_gun\"\n              onClick={startGame}\n              type=\"warning\"\n            >\n              Gosper Glider Gun\n            </Button>\n            <Button value=\"pulsar\" onClick={startGame} type=\"warning\">\n              Pulsar\n            </Button>\n          </>\n        )}\n        <Button onClick={stopGame} type=\"secondary\">\n          Stop\n        </Button>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}